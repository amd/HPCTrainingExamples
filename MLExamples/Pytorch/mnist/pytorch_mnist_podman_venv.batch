#!/bin/bash
#SBATCH --partition=1CN192C4G1H_MI300A_Ubuntu22
#SBATCH --gpus=1
#SBATCH --ntasks=4
#SBATCH --time=01:00:00
#SBATCH --output=pytorch_mnist_podman_venv.out
#SBATCH --error=pytorch_mnist_podman_venv.out

#podman pull docker://rocm/pytorch:rocm6.4.3_ubuntu22.04_py3.10_pytorch_release_2.5.1
#podman pull docker://rocm/pytorch:latest

# Run your containerized workload
podman run --rm \
  --device=/dev/dri --device=/dev/kfd \
  --network=host --ipc=host \
  --userns=keep-id \
  --group-add=keep-groups \
  --cgroupns=host \
  -v "$PWD":"$PWD" \
  -w "$PWD" \
  rocm/pytorch:latest \
  bash -lc '

python -m venv rocm-pytorch

python3 - << EOF
import torch, platform
print("Torch module location: ",torch)
print("Torch:", torch.__version__, " HIP:", getattr(torch.version, "hip", None))
print("Platform:", platform.platform())
print("torch.cuda.is_available:", torch.cuda.is_available())
print("Device count:", torch.cuda.device_count())
if torch.cuda.is_available():
    print("Device 0:", torch.cuda.get_device_name(0))
EOF

cd pytorch_examples/mnist
source rocm-pytorch/bin/activate
pip3 install -r requirements.txt

echo "Starting mnist"
python3 main.py

deactivate
cd ../../..
rm -rf rocm-pytorch

echo "Finished"
'
